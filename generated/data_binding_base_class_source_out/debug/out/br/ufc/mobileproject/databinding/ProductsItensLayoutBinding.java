// Generated by view binder compiler. Do not edit!
package br.ufc.mobileproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.ufc.mobileproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductsItensLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imgViewImagemProduto1;

  @NonNull
  public final ImageView imgViewImagemProduto2;

  @NonNull
  public final TextView txtViewDescricaoProduto1;

  @NonNull
  public final TextView txtViewDescricaoProduto2;

  @NonNull
  public final TextView txtViewNomeProduto1;

  @NonNull
  public final TextView txtViewNomeProduto2;

  private ProductsItensLayoutBinding(@NonNull CardView rootView,
      @NonNull ImageView imgViewImagemProduto1, @NonNull ImageView imgViewImagemProduto2,
      @NonNull TextView txtViewDescricaoProduto1, @NonNull TextView txtViewDescricaoProduto2,
      @NonNull TextView txtViewNomeProduto1, @NonNull TextView txtViewNomeProduto2) {
    this.rootView = rootView;
    this.imgViewImagemProduto1 = imgViewImagemProduto1;
    this.imgViewImagemProduto2 = imgViewImagemProduto2;
    this.txtViewDescricaoProduto1 = txtViewDescricaoProduto1;
    this.txtViewDescricaoProduto2 = txtViewDescricaoProduto2;
    this.txtViewNomeProduto1 = txtViewNomeProduto1;
    this.txtViewNomeProduto2 = txtViewNomeProduto2;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductsItensLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductsItensLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.products_itens_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductsItensLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgViewImagemProduto_1;
      ImageView imgViewImagemProduto1 = ViewBindings.findChildViewById(rootView, id);
      if (imgViewImagemProduto1 == null) {
        break missingId;
      }

      id = R.id.imgViewImagemProduto_2;
      ImageView imgViewImagemProduto2 = ViewBindings.findChildViewById(rootView, id);
      if (imgViewImagemProduto2 == null) {
        break missingId;
      }

      id = R.id.txtViewDescricaoProduto_1;
      TextView txtViewDescricaoProduto1 = ViewBindings.findChildViewById(rootView, id);
      if (txtViewDescricaoProduto1 == null) {
        break missingId;
      }

      id = R.id.txtViewDescricaoProduto_2;
      TextView txtViewDescricaoProduto2 = ViewBindings.findChildViewById(rootView, id);
      if (txtViewDescricaoProduto2 == null) {
        break missingId;
      }

      id = R.id.txtViewNomeProduto_1;
      TextView txtViewNomeProduto1 = ViewBindings.findChildViewById(rootView, id);
      if (txtViewNomeProduto1 == null) {
        break missingId;
      }

      id = R.id.txtViewNomeProduto_2;
      TextView txtViewNomeProduto2 = ViewBindings.findChildViewById(rootView, id);
      if (txtViewNomeProduto2 == null) {
        break missingId;
      }

      return new ProductsItensLayoutBinding((CardView) rootView, imgViewImagemProduto1,
          imgViewImagemProduto2, txtViewDescricaoProduto1, txtViewDescricaoProduto2,
          txtViewNomeProduto1, txtViewNomeProduto2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
